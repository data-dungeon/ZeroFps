End User Platform and OS: 
	Windows (98/2000/ME/XP) och Linux.
	1.5 Ghz, 128 MB RAM.
	GeForce 2+.
	OpenGL 1.2
	OpenAL 1.0
	TCP/IP
	LAN 10 MB

Development Platform and OS:
	Windows:	VC++ 6.0
	Linux:	GCC 3.0

External Code: 
	STLPort:		Används i windows till VC++ 6.0.
	SDL Libs:	Används för att utveckla på både windows och linux.
		SDL:		För basic platforms oberoende och grafik.
		-Mixer:	Ljud mixer för musik. 
		-Image:	Ladda bilder/textures.
		Net:		Sköter om low level nätverks kod. 
	AponAL:		Spelar upp ljud.
	OggVorbis:	Spelar upp OGG musik filer.
	ExtGl:		Laddar opengl 1.2 under windows. Används ej i linux.
	Lua:			Används flitigt av skriptsystemet.

Code Modules:
 Basic:		Grundläggande klasser (math, namnsystem, log files, fil system).
 Render:		Utritning (*opengl). Rendering av modeller och landskap. Textures.
 Engine:		Objectmangement, network, client/server, Input, Physic/Collision, sound.

 ZeroEdit
 App	
 
Control Loop: 
 Main:
	Main anropar EngineStart direkt och det är därifrån allt händer.

 EngineStart:
	Create Engine:

	Kör Engine.Init med kommand line argument.

	Engine.MainLoop();
		NetWork.Run();
		Ov.Run();
	
		Input.Update();
			Läser input update från tangentbord, mus och joystick.

		EngineShell.Run();
			Updates console, updates ZFGUI.

		App.Run();
		
		ObjectManger.Update();
			Updaterar spelvärlden en tid framåt (AI, Animation, Destroy old objects).  
		Collision.Update();
			Flyttar object, kollision och hanterar effekterna av dom.
		
		Sound.Update();
			Väljer vilka ljud som är viktigast fade in/out, play sounds. Play music.
		*ObjectManger.Render();
			Ritar ut spelvärlden.
		
		App.Hud();

	Engine.ShutDown();

	Remove Engine();

Game Physics and Statistics:

Artificial Intelligence:

Art and Video
Artist Instructions: 

Sound and Music
Sound Engineering Instructions: 


